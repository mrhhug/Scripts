;; (defun ispalindrome (n)
;;   (defparameter *string* (string (write-to-string n)))
;;   (defparameter *floor* (floor(/ (length *string*) 2)))
;;   (defparameter *string1* (subseq *string* 0  *floor* ))
;;   (defparameter *string2* (subseq *string* (- (length *string*) *floor*)  (length *string*) ))
;;   ;(print *string1*)
;;   ;(print *string2*)
;;   ;(print *string*)
;;   ;(print *floor*)
;;   (if (string= *string1* (reverse *string2*)) (return-from ispalindrome t) (return-from ispalindrome nil))
;; )
;; 
;; (defun mutiplythatshit (o)
;;   (defparameter *string3* (string (write-to-string o)))
;;   ;(if (ispalindrome (reverse *string2*)) (return-from ispalindrome t) (return-from ispalindrome nil))
;;   (defparameter oj (+ (parse-integer *string3*) (parse-integer (reverse *string3*)) ))
;;   (setq *count* (1+ *count*))
;;   (if (= *count* 100) (return-from mutiplythatshit t))
;;   ;(print oj)
;;   (if (not (ispalindrome oj)) (mutiplythatshit oj))
;; )
;; 
;; (defun incrament (p)
;; (setq Lychrel (1+ Lychrel))
;; (print p)
;; )
;; 
;; ;(print (ispalindrome 2))
;; (defparameter Lychrel 0)
;; (loop for i from 1 to (- 10000 1) do
;;   (defparameter *count* 0)  
;;   ;(if (not (ispalindrome i)) (if (mutiplythatshit i) (incrament i) ))
;;   (if (mutiplythatshit i) (incrament i) )
;; )
;; (print Lychrel)
;; ;; (sort *result* #'string<)    (progn (print i) (return) )
(loop for i from 1 to 9999999999 do
  (if (string= (sort (write-to-string i) #'string<) (sort (write-to-string (* 2 i)) #'string<) )   
  (if (string= (sort (write-to-string i) #'string<) (sort (write-to-string (* 3 i)) #'string<) )   
  (if (string= (sort (write-to-string i) #'string<) (sort (write-to-string (* 4 i)) #'string<) )   
  (if (string= (sort (write-to-string i) #'string<) (sort (write-to-string (* 5 i)) #'string<) )   
  (if (string= (sort (write-to-string i) #'string<) (sort (write-to-string (* 6 i)) #'string<) )   
  )))))
)