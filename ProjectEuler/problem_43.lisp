(defparameter *string* "")
(defparameter *string2* "")
(defparameter *string3* "")
(defparameter *string4* "")
(defparameter *string5* "")
(defparameter *string6* "")
(defparameter *string7* "")
(defparameter *string8* "")
(defparameter *string9* "")
(defparameter *string10* "")
(defparameter *string11* "")
(defparameter *string12* "")
(defparameter *string13* "")
(defparameter *string14* "")
(defparameter *string15* "")
(defparameter *string16* "")
(defparameter *string17* "")
(defparameter *string18* "")
(defparameter *string19* "")
(defparameter *string20* "")
(defparameter *string21* "")
(defparameter *string22* "")
(defparameter *string23* "")
(defparameter *string24* "")
(defparameter *incramental* 0)

(defun finaly(wsxcde)
(setf *string22* wsxcde)
  (loop for iiiiiii from  0 to 9 do
    (setf *string23* (concatenate  'string (string (write-to-string iiiiiii)) *string22*) )
     (setf *string24* (copy-seq *string23*))
;;      (print *string24*)
	(if (string= "0123456789" (sort *string24* #'string<)) (print *string23*))
     )
)
(defun yuiroa(ttrt)
(setf *string19* ttrt)
  (loop for iaiiiii from  0 to 9 do
    (setf *string20* (concatenate  'string (string (write-to-string iaiiiii)) *string19*) )
     (setf *string21* *string20*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string21* 0 3)) 2))
     (if (= 0 (mod (parse-integer(subseq *string21* 1 4)) 3))
     (if (= 0 (mod (parse-integer(subseq *string21* 2 5)) 5))
     (if (= 0 (mod (parse-integer(subseq *string21* 3 6)) 7))
     (if (= 0 (mod (parse-integer(subseq *string21* 4 7)) 11))
     (if (= 0 (mod (parse-integer(subseq *string21* 5 8)) 13))
     (if (= 0 (mod (parse-integer(subseq *string21* 6 9)) 17)) 
     (if (< (length *string20*) 10) (finaly *string20*))
     ))))
  )
))))

(defun yuiro(ttrt)
(setf *string16* ttrt)
  (loop for iiiiii from  0 to 9 do
    (setf *string17* (concatenate  'string (string (write-to-string iiiiii)) *string16*) )
     (setf *string18* *string17*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string17* 0 3)) 3))
     (if (= 0 (mod (parse-integer(subseq *string17* 1 4)) 5))
     (if (= 0 (mod (parse-integer(subseq *string17* 2 5)) 7))
     (if (= 0 (mod (parse-integer(subseq *string17* 3 6)) 11))
     (if (= 0 (mod (parse-integer(subseq *string17* 4 7)) 13))
     (if (= 0 (mod (parse-integer(subseq *string17* 5 8)) 17)) 
     (if (< (length *string18*) 9) (yuiroa *string18*))
     ))))
  )
)))
(defun yuio(ttt)
(setf *string13* ttt)
  (loop for iiiii from  0 to 9 do
    (setf *string14* (concatenate  'string (string (write-to-string iiiii)) *string13*) )
     (setf *string15* *string14*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string15* 0 3)) 5))
     (if (= 0 (mod (parse-integer(subseq *string15* 1 4)) 7))
     (if (= 0 (mod (parse-integer(subseq *string15* 2 5)) 11))
     (if (= 0 (mod (parse-integer(subseq *string15* 3 6)) 13))
     (if (= 0 (mod (parse-integer(subseq *string15* 4 7)) 17)) 
     (if (< (length *string14*) 8) (yuiro *string14*))
     ))))
  )
))

(defun bbb(b)
  (setf *string10* b)
  (loop for iiii from  0 to 9 do
    (setf *string11* (concatenate  'string (string (write-to-string iiii)) *string10*) )
     (setf *string12* *string11*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string11* 0 3)) 7))
     (if (= 0 (mod (parse-integer(subseq *string11* 1 4)) 11))
     (if (= 0 (mod (parse-integer(subseq *string11* 2 5)) 13))
     (if (= 0 (mod (parse-integer(subseq *string11* 3 6)) 17)) 
     (if (< (length *string3*) 7) (yuio *string12*))
     ))))
  )
)
(defun aaaaa(n)
  (setf *string7* n)
  (loop for iii from  0 to 9 do
    (setf *string8* (concatenate  'string (string (write-to-string iii)) *string7*) )
     (setf *string9* *string8*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string9* 0 3)) 11))
     (if (= 0 (mod (parse-integer(subseq *string9* 1 4)) 13))
     (if (= 0 (mod (parse-integer(subseq *string9* 2 5)) 17)) (bbb *string8*))))
  )
)
(defun duplicatenums(duplicatenumsnmume)
  (setf *string4* (string (write-to-string duplicatenumsnmume)))
  (loop for ii from  0 to 9 do
    (setf *string5* (concatenate  'string (string (write-to-string ii)) *string4*) )
     (setf *string6* *string5*) 
;; (print *string3*)
     (if (= 0 (mod (parse-integer(subseq *string5* 0 3)) 13))
     (if (= 0 (mod (parse-integer(subseq *string5* 1 4)) 17)) (aaaaa *string6*)))
  )
)
(loop for i from  99 to 1000 do
  (if (= 0 (mod i 17)) (duplicatenums i))
)
;;16695334890