(defun isprime (x)
  (if (< x 2)
	  (return-from isprime nil)
	(dotimes (i (+ (ceiling (sqrt x)) 1))
	  (if (> i 1)
		  (if (< i x)
			  (if (equal (mod x i) 0)
				  (return-from isprime nil))))))
(return-from isprime t))

(defun isprimeinvert (x)
  (if (< x 2)
	  (return-from isprimeinvert nil)
	(dotimes (i (+ (ceiling (sqrt x)) 1))
	  (if (> i 1)
		  (if (< i x)
			  (if (equal (mod x i) 0)
				  (return-from isprimeinvert t))))))
(return-from isprimeinvert nil))

(defun goright (x)
  (defparameter *string* (string (write-to-string x)))
;;   (defparameter *string* (subseq *string* 1  (length *string*) ))
;;   (if (= (length *string*) 1) (if (isprime x) (return-from goright t)))
;;   (if (isprimeinvert x) (return-from goright nil))
;;   ;(print *string*)
;;   (goright (parse-integer *string*)) 
  (defparameter *string* (subseq *string* 1  (length *string*)))
  (defparameter x (parse-integer *string*))
;;   (print x)
  (if (< x 10) (if (isprime x) (return-from goright t)))
;;   (print *string*)
  (if (isprime x) (goright x))
)

(defun pealleft (x)
  
)

(defun goleft (x)
  (defparameter *string* (string (write-to-string x)))
;;   (print *string*)
;;   (print (length *string*))
;;   (print " " )
;;   (defparameter *string* (subseq *string* 0  (- (length *string*) 1) ))
;;   (print *string*)
;;   (print (length *string*))
;;   (print " " )
;;   (if (= (length *string*) 1) (if (isprime x) (return-from goleft t)))
;;   (if (isprimeinvert x) (return-from goleft nil))
;;   
;;   (goleft (parse-integer *string*)) 
;;   (print *string*)
  (defparameter *string* (subseq *string* 0  (- (length *string*) 1) ))
  (defparameter x (parse-integer *string*))
;;   (print x)
  (if (< x 10) (if (isprime x) (return-from goleft t)))
;;   (print *string*)
  (if (isprime x) (goleft x))
)

(defparameter *count* 0)
(loop for i from 10 to 739398 do 
  
   ;(if (goleft i) (print i))
  (if (isprime i) (if (goleft i) (if (goright i) (setq *count* (+ i *count*)))))
)
(print *count*)